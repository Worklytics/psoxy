package co.worklytics.psoxy;

import co.worklytics.psoxy.gateway.ConfigService;
import co.worklytics.psoxy.gateway.SourceAuthStrategy;
import co.worklytics.psoxy.gateway.impl.EnvVarsConfigService;
import com.google.cloud.functions.HttpFunction;
import com.google.cloud.functions.HttpRequest;
import com.google.cloud.functions.HttpResponse;
import dagger.Binds;
import dagger.Module;
import dagger.Provides;
import dagger.multibindings.IntoSet;

/**
 * thin container that
 */
public class GCPContainer implements HttpFunction {

    @Override
    public void service(HttpRequest request, HttpResponse response) throws Exception {

        //q: why doesn't below work?? It exists (generated by Dagger annotation processor), and I
        // can get intellij to link to it - but still get compile error
        Route route = ((Container) DaggerContainer).providesRoute();
        route.service(request, response);
    }

    @Module(includes = ProvidesDIModule.class)
    interface DIModule {

        /**
         * in GCP cloud function, we should be able to configure everything via env vars; either
         * directly or by binding them to secrets at function deployment:
         *
         * @see "https://cloud.google.com/functions/docs/configuring/env-var"
         * @see "https://cloud.google.com/functions/docs/configuring/secrets"
         */
        @Binds ConfigService bindConfig(EnvVarsConfigService envVarsConfigService);
    }

    @Module
    static class ProvidesDIModule {

        @Provides @IntoSet
        public SourceAuthStrategy providesGoogleCloudPlatformServiceAccountKeyAuthStrateg(GoogleCloudPlatformServiceAccountKeyAuthStrategy strategy) {
            return strategy;
        }
    }
}
