package co.worklytics.psoxy.gateway.output;

import co.worklytics.psoxy.gateway.ProcessedContent;

/**
 * an output interface for writing processed content
 *
 * example implementations could include:
 *  SQS, Pub/Sub, Cloud Storage, or a local file system
 *
 */
public interface Output {

    /**
     * writes processed content to this output
     *
     * a key, if needed by the implementation, can be generated by the implementation itself.
     *
     * @param content the processed content to write
     */
    void write(ProcessedContent content);

    /**
     * writes processed content to this output, with a specific key (eg, file name, id number, etc).
     *
     * Output implementation is free to use key how it sees fit, or ignore it. Use-case is a more friendly/useful id/index solution
     * vs. just using a UUID, timestamp, hash or similar.
     *
     * in particular, the output implementation is free to mutate the key if it chooses, in case there's some analogous concept,
     * yet chars in key aren't supported by the underlying system.
     *
     * @param key the key to associate with the content
     * @param content the processed content to write
     */
    void write(String key, ProcessedContent content);

}
