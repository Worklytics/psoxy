name: CI - bundles

# CI for our project as a GitHub action
# see https://help.github.com/en/actions/language-and-framework-guides/building-and-testing-java-with-maven

# refactor to use matrix?
# see https://github.com/actions/setup-java#testing-against-different-java-versions

on:
  push: # mainline + rc's only
    branches:
      - 'main'
      - 'rc-*'

jobs:
  bundle:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        implementation: [ 'gcp', 'aws' ]
    name: bundle ${{ matrix.implementation }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu
      - name: Package Deployment artifact
        working-directory: java/
        # see tools/build.sh; this should be equivalent to that, w/o re-routing errors to log file
        # or logic to skip build if artifact already exists
        run: |
          mvn clean -f pom.xml
          mvn package install -f "gateway-core/pom.xml" -Dmaven.test.skip=true
          mvn package install -f "core/pom.xml" -Dmaven.test.skip=true
          mvn package -f "impl/${{ matrix.implementation }}/pom.xml" -Pdistribution 
      - name: Verify license artifacts are in the uber jar
        working-directory: java/impl/${{ matrix.implementation }}
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n1)

          echo "Inspecting $JAR_FILE for required license files"

          unzip -l "$JAR_FILE" | tee jar-contents.txt

          # Check summary file
          grep -q 'THIRD-PARTY-LICENSE-LIST.txt' jar-contents.txt || {
            echo "::error::Missing THIRD-PARTY-LICENSE-LIST.txt in $JAR_FILE"
            exit 1
          }

          # Check for at least one LICENSE or NOTICE file at root
#          grep -Eq '/(LICENSE|NOTICE)$' jar-contents.txt || {
#            echo "::error::Missing LICENSE or NOTICE at root of $JAR_FILE"
#            exit 1
#          }

          # Check for license texts from dependencies (in licenses/)
          grep -q '^ *[0-9].*licenses/' jar-contents.txt || {
            echo "::error::No license texts from dependencies found in licenses/ folder"
            exit 1
          }

          echo "âœ… License artifacts verified in $JAR_FILE"
