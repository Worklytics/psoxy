name: Build - bundle

# Build Java part of our project as a GitHub action
# see https://help.github.com/en/actions/language-and-framework-guides/building-and-testing-java-with-maven

on:
  workflow_call:
    inputs:
      implementation:
        required: true
        type: string
        description: Implementation to build (gcp, aws, etc)
        default: 'gcp'
      java-version:
        required: false
        type: string
        description: Java version to use # see https://github.com/actions/setup-java#supported-version-syntax
        default: 17
      java-distribution:
        required: false
        type: string
        description: java distribution to use # see https://github.com/actions/setup-java#supported-distributions
        default: zulu

jobs:
  ci_java:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.java-version }}
          # https://github.com/actions/setup-java#supported-distributions
          distribution: ${{ inputs.java-distribution }}
      - name: Package Deployment artifact
        working-directory: java/
        # see tools/build.sh; this should be equivalent to that, w/o re-routing errors to log file
        # or logic to skip build if artifact already exists
        run: |
          mvn clean -f pom.xml
          mvn package install -f "gateway-core/pom.xml" -Dmaven.test.skip=true
          mvn package install -f "core/pom.xml" -Dmaven.test.skip=true
          mvn package -f "impl/${{ inputs.implementation }}/pom.xml"

